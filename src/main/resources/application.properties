spring.application.name=zenzap

# PostgreSQL Database Connection
spring.datasource.url=jdbc:postgresql://bg3lhfzfrq2xaeqelc9k-postgresql.services.clever-cloud.com:50013/bg3lhfzfrq2xaeqelc9k
spring.datasource.username=urzzksuiscffsvcjj7cx
spring.datasource.password=rEA8n2Zu2LVLIClggA3UPNjYaXMZ9H
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate/JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=zenzapsas@gmail.com
spring.mail.password=zenzap2025
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# GOOGLE OAUTH2
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# Donde redirigir luego de login exitoso
spring.security.oauth2.client.registration.google.client-name=Google
